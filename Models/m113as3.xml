<PropertyList>
 <path>m113.ac</path>
        <offsets>
                <heading-deg>270.0</heading-deg>
								<x-m>2.45</x-m>
        </offsets>
 
        <!-- rotate turret -->
        <animation>
                <object-name>turret01</object-name>
                <object-name>turret02</object-name>
                <object-name>barrel</object-name>
                <type>spin</type>
                <property></property>
                <factor>-10</factor>
                <center>
                        <x-m>-0.071</x-m>
                        <y-m>0.297</y-m>
                        <z-m>1.975</z-m>
                </center>
                <axis>
                        <x>0</x>
                        <y>0</y>
                        <z>1</z>
                </axis>
        </animation>
 
        <!-- shift barrel-->
        <animation>
                <object-name>barrel</object-name>
                <type>rotate</type>
                <property></property>
                <factor>-6.5</factor>
                <offset-deg>-5</offset-deg>
                <min>-3</min>
                <max>35</max>
                <center>
                        <x-m>-0.071</x-m>
                        <y-m>-0.290</y-m>
                        <z-m>1.900</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--rs wheel-->
        <animation>
                <object-name>rightsp</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>-0.995</x-m>
                        <y-m>-2.158</y-m>
                        <z-m>0.511</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--r1 wheel-->
        <animation>
                <object-name>rightrd1</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>-1.001</x-m>
                        <y-m>-1.559</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--r2 wheel-->
        <animation>
                <object-name>rightrd2</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>-1.001</x-m>
                        <y-m>-0.958</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--r3 wheel-->
        <animation>
                <object-name>rightrd3</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>-1.001</x-m>
                        <y-m>-0.323</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--r4 wheel-->
        <animation>
                <object-name>rightrd4</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>-1.001</x-m>
                        <y-m>0.287</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--r5 wheel-->
        <animation>
                <object-name>rightrd5</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>-1.001</x-m>
                        <y-m>0.909</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--ridle wheel-->
        <animation>
                <object-name>rightid</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>-0.995</x-m>
                        <y-m>1.591</y-m>
                        <z-m>0.426</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--ls wheel-->
        <animation>
                <object-name>leftsp</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>0.982</x-m>
                        <y-m>-2.158</y-m>
                        <z-m>0.511</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--l1 wheel-->
        <animation>
                <object-name>leftrd1</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>0.999</x-m>
                        <y-m>-1.559</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--l2 wheel-->
        <animation>
                <object-name>leftrd2</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>0.999</x-m>
                        <y-m>-0.958</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--l3 wheel-->
        <animation>
                <object-name>leftrd3</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>0.999</x-m>
                        <y-m>-0.323</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--l4 wheel-->
        <animation>
                <object-name>leftrd4</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>0.999</x-m>
                        <y-m>0.287</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--l5 wheel-->
        <animation>
                <object-name>leftrd5</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>0.999</x-m>
                        <y-m>0.909</y-m>
                        <z-m>0.326</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>
        <!--lidle wheel-->
        <animation>
                <object-name>leftid</object-name>
                <type>spin</type>
                <property>velocities/groundspeed-kt</property>
                <factor>4</factor>
                <center>
                        <x-m>0.982</x-m>
                        <y-m>1.591</y-m>
                        <z-m>0.426</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>

        <!-- tracks -->
        <animation>
                <object-name>lefttrk</object-name>
                <object-name>righttrk</object-name>
                <condition>
                        <greater-than>
                <property>velocities/airspeed-kt</property>
                        <value>1</value>                        
                        </greater-than>
                </condition>
                <type>textranslate</type>
                <property>velocities/airspeed-kt</property>
                <factor>50</factor>
                <center>
                        <x-m>-0.001</x-m>
                        <y-m>-0.312</y-m>
                        <z-m>0.400</z-m>
                </center>
                <axis>
                        <x>1</x>
                        <y>0</y>
                        <z>0</z>
                </axis>
        </animation>

		    <!-- Nasal code -->
	<nasal>
	  

		<load>
			<![CDATA[
			print("Loading m113 ", cmdarg().getPath());

			
			

############################################
#A-10 INITIALIZER
			var object_init = func() {
				# Datas of this object are under: cmdarg().getPath()
				var thisNodeName = cmdarg().getPath();
				var thisNode = props.globals.getNode(thisNodeName);
				
         ########################################################################
        ########################################################################
        # INITIALIZE BOMBABLE
        # 
        # Initialize constants and main routines for maintaining altitude
        # relative to ground-level, relocating after file/reset, and 
        # creating bombable/shootable objects.
        # 
        # These routines are found in FG/nasal/bombable.nas
        #  
        ########################################################################               
        # INITIALIZE BOMBABLE Object
        # This object will be slurped in the object's node as a child
        # node named "bombable".                 
        # All distances are specified in meters.
        # All altitudes are relative to current ground level at the object's 
        # location
        # 
         
        thisNodeName = cmdarg().getPath(); 

        var bombableObject = {  
          
          
          objectNodeName : thisNodeName,
          objectNode : props.globals.getNode(thisNodeName),
          updateTime_s : 1/3, #time, in seconds, between the updates that 
          #keep the object at its AGL. Tradeoff is high-speed updates look more
          #realistic but slow down the framerate/cause jerkiness.  Faster-moving
          #objects will need more frequent updates to look realistic.

		                        
          #########################################                              
          # ALTITUDE DEFINITIONS
          # 
          # All altitudes are in meters                    
          #         
          altitudes : {	
            wheelsOnGroundAGL_m : 1 , #altitude correction to add to your aircraft or ship that is needed to put wheels on ground (or, for a ship, make it float in the water at the correct level).  For most objects this is 0 but some models need a small correction to place them exactly at ground level
            
            minimumAGL_m : 0, #minimum altitude above ground level this object is allowed to fly
            maximumAGL_m : 0, #maximum altitude AGL this object is allowed to fly, ie, operational ceiling	    
            crashedAGL_m : -0.85, #altitude AGL when crashed.  Ships will sink to this level, aircraft or vehicles will sink into the ground as landing gear collapses or tires deflate. Should be negative, even just -0.001.
          },
          #  
          #########################################
          # VELOCITIES DEFINITIONS
          # 
          velocities : {               
            maxSpeedReduce_percent : 5.5, #max % to reduce speed, per step, when damaged
            minSpeed_kt : 48, #minimum speed to reduce to when damaged.  Ground vehicles and ships might stop completely when damaged but aircraft will need a minimum speed so they keep moving until they hit the ground.
    
            damagedAltitudeChangeMaxRate_meterspersecond : 6.5, #max rate to sink or fly downwards when damaged, in meters/second
          },
          #  
          #########################################
          # EVASION DEFINITIONS
          # 
          # The evasion system makes the AI aircraft dodge when they come under
          # fire. 
          evasions : {               
            dodgeDelayMax_sec : 15, #max time to delay/wait between dodges
            dodgeDelayMin_sec : 5, #minimum time to delay/wait between dodges
            dodgeMax_deg : 100, #Max amount to turn when dodging
            dodgeMin_deg : 45, #minimum amount to turn when dodging
            dodgeROverLPreference_percent : 90, # Preference for right turns vs. left when dodging.  90% means 90% right turns, 50% means 50% right turns.
            dodgeAltMin_m : -100, #Aircraft will begin to move up or down 
            dodgeAltMax_m : 100, #Max & Min are relative to current alt  
          },
          #  
          #########################################
          # DIMENSION DEFINITIONS
          #
          # All dimensions are in meters          
          #           
          dimensions : {                  
            width_m : 3,  #width of your object, ie, for aircraft, wingspan
            length_m : 5, #length of your object, ie, for aircraft, distance nose to tail
            height_m : 3, #height of your object, ie, for aircraft ground to highest point when sitting on runway
            damageRadius_m : 6, #hits within this distance of the 
                                #center of object to be considered direct hits
          },
          #
          #########################################
          # VULNERABILITIES DEFINITIONS        
          #
          vulnerabilities : {                   
            damageVulnerability : 1, #Vulnerability to damage from armament, 1=normal M1 tank; higher to make objects easier to kill and lower to make them more difficult.  This is a multiplier, so 5 means 5X easier to kill than an M1, 1/5 means 5X harder to kill. 
            
            engineDamageVulnerability_percent : 3, #Chance that a small-caliber machine-gun round will damage the engine.       
            
            fireVulnerability_percent : 20, #Vulnerability to catching on fire. 100% means even the slightest impact will set it on fire; 20% means quite difficult to set on fire; 0% means set on fire only when completely damaged; -1% means never set on fire.                          
            
            fireDamageRate_percentpersecond : 0.2, #Amount of damage to add, per second, when on fire.  100%=completely damaged.
            
            fireExtinguishMaxTime_seconds : 100, #Once a fire starts, for this many seconds there is a chance to put out the fire; fires lasting longer than this won't be put out until the object burns out.
            
            fireExtinguishSuccess_percentage : 80, #Chance of the crew putting out the fire within the MaxTime above.
            
            explosiveMass_kg : 735 , #mass of the object in KG, but give at least a 2-10X bonus to anything carrying flammables or high explosives.
          },
          #
          #########################################
          # LIVERY DEFINITIONS
          #
          # Path to livery files to use at different damage levels.
          # Path is relative to the AI aircraft's directory.
          # The object will start with the first livery listed and 
          # change to succeeding liveries as the damage
          # level increases. The final livery should indicate full damage/
          # object destroyed.        
          # 
          # If you don't want to specify any special liveries simply set 
          # damageLivery : nil and the object's normal livery will be used.  
          #                                                            
          damageLiveries : {
            damageLivery : [  ]                        
          },
                            
        };

        #########################################
        # INITIALIZE ROUTINES
        # 
        # OVERALL INITIALIZER: Needed to make all the others work
        bombable.initialize ( bombableObject );
        #
        # LOCATION: Relocate object to maintain its position after file/reset       
        # (best not used for airplanes)
        # bombable.location_init ( thisNodeName );
        #
        # GROUND: Keep object at altitude relative to ground level
        bombable.ground_init ( thisNodeName );
        #
        # BOMBABLE: Make the object bombable/damageable        
        var bombableListenerid = bombable.bombable_init ( thisNodeName );
        #
        # SMOKE/CONTRAIL: Start a flare, contrail, smoke trail, or exhaust 
        # trail for the object.
        # Smoke types available: flare, jetcontrail, pistonexhaust, smoketrail,
        # damagedengine                        
        bombable.startSmoke("jetcontrail", thisNodeName );
        #
        # END INITIALIZE BOMBABLE
        ########################################################################
        ########################################################################                
	      

        
			}
			
			object_init();
			]]>
		</load>
		<unload>
			<![CDATA[
			print("Unload A-10.");


      ########################################################################
      ########################################################################                
			# BOMBABLE DESTRUCTORS      			
			# 			
      var objectNodeName= cmdarg().getPath(); 
      var thisNodeName = cmdarg().getPath();
      var bombableListenerid = bombable.bombable_init ( thisNodeName );
      bombable.ground_del( objectNodeName );
      bombable.location_del (objectNodeName);
      bombable.bombable_del( objectNodeName , bombableListenerid );
      #
	    ########################################################################
      ########################################################################                
      
    

			]]>
		</unload>
	</nasal>

</PropertyList>
